#!/bin/bash

# Post-commit hook to automatically update planning documents
# This runs after each successful commit to keep docs in sync

# Check if this is an auto-generated docs commit to prevent infinite loops
COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
if [[ "$COMMIT_MESSAGE" == *"auto-update planning documents"* ]]; then
    echo "🔄 Skipping auto-update for documentation commit to prevent infinite loop"
    exit 0
fi

echo "🤖 Post-commit: Updating planning documents..."

# Navigate to project root
cd "$(git rev-parse --show-toplevel)"

# Check if planning doc updater exists
if [ -f "scripts/update-planning-docs.js" ]; then
    # Run the planning document updater
    node scripts/update-planning-docs.js
    
    # Check if documents were actually changed
    if git diff --quiet docs/planning/; then
        echo "📄 Planning documents are already up to date"
    else
        echo "📝 Planning documents updated, creating follow-up commit..."
        
        # Stage the updated planning documents
        git add docs/planning/TASK-TRACKER.md docs/planning/PROJECT-ROADMAP.md
        
        # Create a follow-up commit for the doc updates (with --no-verify to skip hooks)
        git commit -m "docs: auto-update planning documents

- Synchronized task tracker with current progress
- Updated project roadmap with completion status  
- Automated epic tracking and metrics

🤖 Auto-generated by post-commit hook" --no-verify
        
        echo "✅ Planning documents committed automatically"
    fi
else
    echo "⚠️  Planning document updater not found, skipping auto-update"
fi

echo "🎉 Post-commit hook completed"